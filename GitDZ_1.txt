JSON
 1. Создать внешний репозиторий c названием JSON.
GitHub -> Top Repositories New -> Create a new repository (заполнить форму для создания нового репозитория, name JSON)-> Create repository
 2. Клонировать репозиторий JSON на локальный компьютер.
Скопировать ссылку репозитория JSON вставить в Git -> git clone https://github.com/RamilyaMin/JSON.git
 3. Внутри локального JSON создать файл “new.json”.
cd JSON 
touch new.json
 4. Добавить файл под гит.
git add new.json
 5. Закоммитить файл.
git commit -m "new"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
 8. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "new"
git push
 9. Создать файл preferences.json
 touch preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 vim preferences.json
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch skils.json
 12. Отправить сразу 2 файла на внешний репозиторий.
git add . 
git commit -m "new"
 13. На веб интерфейсе создать файл bug_report.json.
Add file -> Create new file -> bug_report.json
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Commit changes
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 В репозитории кликаем по файлу и модифицируем
 - После внесения изменений сохраняем их кнопка Commit changes
16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
осле внесения изменений сохраняем их кнопка Commit changes
 17. Синхронизировать внешний и локальный репозиторий JSON
git pull
